//
//  MealPlansInteractor.swift
//  CoreBlastFY
//
//  Created by Riccardo Washington on 4/16/20.
//  Copyright (c) 2020 Riccardo Washington. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MealPlansBusinessLogic {
    func getPlansOverview(request: MealPlans.GetPlan.Request)
}

protocol MealPlansDataStore {
    var mealPlans: [MealPlan]? { get }
}

class MealPlansInteractor: MealPlansBusinessLogic, MealPlansDataStore {
    var presenter: MealPlansPresentationLogic?
    var worker: MealPlansWorker?
    var mealPlans: [MealPlan]?
    
    
    // MARK: Do something
    
    func getPlansOverview(request: MealPlans.GetPlan.Request) {
        if let mealPlans = mealPlans {
            let response = MealPlans.GetPlan.Response(mealPlans: mealPlans)
            self.presenter?.presentMealPlansOverview(response: response)
        } else {
            worker = MealPlansWorker(dataStore: MealPlanAPI())
            worker?.getPlansOverview(completion: { (mealPlans, error) in
                if let mealPlans = mealPlans {
                    self.mealPlans = mealPlans
                    let response = MealPlans.GetPlan.Response(mealPlans: mealPlans)
                    self.presenter?.presentMealPlansOverview(response: response)
                } else {
                    //handle error
                    print("error getting meal plans")
                }
            })
        }
    }
}
