//
//  MealPlanDetailRouter.swift
//  CoreBlastFY
//
//  Created by Riccardo Washington on 4/18/20.
//  Copyright (c) 2020 Riccardo Washington. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol MealPlanDetailRoutingLogic {
    func routeToMealDetails()
}

protocol MealPlanDetailDataPassing {
    var dataStore: MealPlanDetailDataStore? { get }
}

class MealPlanDetailRouter: NSObject, MealPlanDetailRoutingLogic, MealPlanDetailDataPassing {
    
    weak var viewController: MealPlanDetailViewController?
    var dataStore: MealPlanDetailDataStore?
    
    // MARK: Routing
    
    func routeToMealDetails() {
        guard let source = viewController else { return }
        let destinationVC = MealDetailsViewController()
        guard let dataStore = dataStore else { return }
        guard var destinationDS = destinationVC.router?.dataStore else { return }
        passMealDetailsController(source: dataStore, destination: &destinationDS)
        navigateToMealDetailsController(source: source, destination: destinationVC)
    }
    
    
    // MARK: Navigation
    
    func navigateToMealDetailsController(source: MealPlanDetailViewController, destination: MealDetailsViewController) {
        source.show(destination, sender: nil)
    }
    
    // MARK: Passing data
    
    func passMealDetailsController(source: MealPlanDetailDataStore, destination: inout MealDetailsDataStore) {
        destination.recipe = source.recipe
    }
    
    
}
