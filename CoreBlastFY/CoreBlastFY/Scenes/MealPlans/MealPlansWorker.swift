//
//  MealPlansWorker.swift
//  CoreBlastFY
//
//  Created by Riccardo Washington on 4/16/20.
//  Copyright (c) 2020 Riccardo Washington. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

protocol GetPlansOverviewStore {
    func fetchPlansOverview(completion: @escaping([MealPlan], GetPlansOverviewStoreError?) -> Void)
}

class MealPlansWorker {
    
    var remoteStore: GetPlansOverviewStore
    
    init(dataStore: GetPlansOverviewStore) {
        self.remoteStore = dataStore
    }
    
    func getPlansOverview(completion: @escaping([MealPlan]?, GetPlansOverviewStoreError?) -> Void) {
        remoteStore.fetchPlansOverview { (mealPlans, error) in
            completion(mealPlans, error)
        }
    }
}

enum GetPlansOverviewStoreError: Equatable, Error {
    case CannotFetch(String)
}

func ==(lhs: GetPlansOverviewStoreError, rhs: GetPlansOverviewStoreError) -> Bool
{
    switch (lhs, rhs) {
    case (.CannotFetch(let a), .CannotFetch(let b)) where a == b: return true
    default: return false
    }
    
}
