//
//  MealDetailInteractorTests.swift
//  CoreBlastFY
//
//  Created by Riccardo Washington on 4/25/20.
//  Copyright (c) 2020 Riccardo Washington. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import CoreBlastFY
import XCTest

class MealDetailInteractorTests: XCTestCase {
  // MARK: Subject under test
  
  var sut: MealDetailsInteractor!
  
  // MARK: Test lifecycle
  
  override func setUp() {
    super.setUp()
    setupMealDetailInteractor()
  }
  
  override func tearDown() {
    sut = nil
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupMealDetailInteractor() {
    sut = MealDetailsInteractor()
  }
  
  // MARK: Test doubles
  
    class MealDetailPresentationLogicSpy: MealDetailsPresentationLogic {
        func presentRecipeDetails(response: MealDetails.RecipeDetails.Response) {
            presentSomethingCalled = true
        }
        
    var presentSomethingCalled = false
  }
  
  // MARK: Tests
  
  func testPassPresenterRecipe()
  {
    // Given
    let spy = MealDetailPresentationLogicSpy()
    sut.presenter = spy
    let recipe = Recipe(name: "he", ingredients: [], instructions: [], mealType: .breakfast, image: nil)
    
    // When
    sut.passPresenterRecipe(with: recipe)
    
    // Then
    XCTAssertTrue(spy.presentSomethingCalled, "doSomething(request:) should ask the presenter to format the result")
  }
}
